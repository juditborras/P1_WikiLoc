--DROP TRIGGER TRG_CAMPS_QTAT_TOTAL_V_PAI;
--DROP TRIGGER TRG_CAMPS_QTAT_TOTAL_V_SEG;
--DROP TRIGGER TRG_CAMPS_QTAT_FETES_AMB_COMENTARI;
--DROP TRIGGER TRG_CAMPS_QTAT_TOTAL_V_INF;
--DROP TRIGGER TRG_CAMPS_QTAT_USUARIS_COMENTAT;
DROP TRIGGER TRG_CAMPS_CALCULATS_RUTA;
DROP TRIGGER TRG_COMPANY_RUTA;
DROP TABLE COMPANYS CASCADE CONSTRAINTS;
DROP TRIGGER TRG_COMENTARI_PROPIETARI;
DROP TRIGGER TRG_FETA_COMENTARI;
DROP TABLE COMENTARI CASCADE CONSTRAINTS;
DROP TABLE TIPUS CASCADE CONSTRAINTS;
DROP INDEX PUNT_NOM;
DROP TABLE PUNT CASCADE CONSTRAINTS;
DROP TRIGGER TRG_MT_FETES;
DROP TABLE FETES CASCADE CONSTRAINTS;
DROP TABLE RUTA CASCADE CONSTRAINTS;
DROP TABLE USUARI CASCADE CONSTRAINTS;

CREATE TABLE USUARI (

    LOGIN   VARCHAR2(15) CONSTRAINT USUARI_PK PRIMARY KEY,
    PWD     VARCHAR2(256) CONSTRAINT USUARI_NN_PWD NOT NULL,
    EMAIL   VARCHAR2(40) CONSTRAINT USUARI_NN_EMAIL NOT NULL
                         CONSTRAINT USUARI_UN_EMAIL UNIQUE,
    FOTO    BLOB
);

CREATE TABLE RUTA (

    ID            NUMBER(6) GENERATED BY DEFAULT AS IDENTITY
                            CONSTRAINT RUTA_PK PRIMARY KEY,
    TITOL         VARCHAR2(60) CONSTRAINT RUTA_NN_TITOL NOT NULL
                               CONSTRAINT RUTA_UN_TITOL UNIQUE,
    DESC_RUTA     VARCHAR2(1200) CONSTRAINT RUTA_NN_DESC NOT NULL,
    TEXT_RUTA     CLOB CONSTRAINT RUTA_NN_TEXT NOT NULL,
    DIST          NUMBER(6,3) CONSTRAINT RUTA_NN_DIST NOT NULL
                            CONSTRAINT RUTA_CK_DIST CHECK (DIST >0),
    TEMPS         NUMBER(6) CONSTRAINT RUTA_NN_TEMPS NOT NULL
                            CONSTRAINT RUTA_CK_TEMPS CHECK (TEMPS >0),
    DESN_P        NUMBER(6) CONSTRAINT RUTA_NN_DESN_P NOT NULL
                            CONSTRAINT RUTA_CK_DESN_P CHECK (DESN_P >=0),
    DESN_N        NUMBER(6) CONSTRAINT RUTA_NN_DESN_N NOT NULL
                            CONSTRAINT RUTA_CK_DESN_N CHECK (DESN_N >=0),
    DIFIC         NUMBER(1) CONSTRAINT RUTA_NN_DIFIC NOT NULL
                            CONSTRAINT RUTA_CK_DIFIC CHECK (DIFIC >=1 AND DIFIC <=5),
							
	QTAT_USUARIS_COMENTAT 		NUMBER(3) DEFAULT 0 CONSTRAINT RUTA_NN_QTAT_USUARIS_COMENTAT NOT NULL
										  CONSTRAINT RUTA_CK_QTAT_USUARIS_COMENTAT CHECK (QTAT_USUARIS_COMENTAT >=0),
	QTAT_TOTAL_V_INF	  		NUMBER(6) DEFAULT 0 CONSTRAINT RUTA_NN_QTAT_TOTAL_V_INF NOT NULL
										  CONSTRAINT RUTA_CK_QTAT_TOTAL_V_INF CHECK (QTAT_TOTAL_V_INF >=0),
	QTAT_FETES_AMB_COMENTARI	NUMBER(3) DEFAULT 0 CONSTRAINT RUTA_NN_QTAT_FETES_AMB_COMENTARI NOT NULL
										  CONSTRAINT RUTA_CK_QTAT_FETES_AMB_COMENTARI CHECK (QTAT_FETES_AMB_COMENTARI >=0),
	QTAT_TOTAL_V_SEG			NUMBER(6) DEFAULT 0 CONSTRAINT RUTA_NN_QTAT_TOTAL_V_SEG NOT NULL
										  CONSTRAINT RUTA_CK_QTAT_TOTAL_V_SEG CHECK (QTAT_TOTAL_V_SEG >=0),
	QTAT_TOTAL_V_PAI			NUMBER(6) DEFAULT 0 CONSTRAINT RUTA_NN_QTAT_TOTAL_V_PAI NOT NULL
										  CONSTRAINT RUTA_CK_QTAT_TOTAL_V_PAI CHECK (QTAT_TOTAL_V_PAI >=0),
    
    LOGIN_USUARI  VARCHAR2(15) CONSTRAINT RUTA_NN_LOGIN_USUARI NOT NULL,
    
    CONSTRAINT RUTA_FK_USUARI FOREIGN KEY (LOGIN_USUARI) REFERENCES USUARI (LOGIN)
);

CREATE TABLE FETES (

    LOGIN_USUARI VARCHAR2(15),
    MT           DATE,
    ID_RUTA      NUMBER(6) CONSTRAINT FETES_NN_ID_RUTA NOT NULL,
    
    CONSTRAINT FETES_FK_LOGIN_USUARI FOREIGN KEY (LOGIN_USUARI) REFERENCES USUARI (LOGIN),
    CONSTRAINT FETES_FK_ID_RUTA FOREIGN KEY (ID_RUTA) REFERENCES RUTA (ID),
    
    CONSTRAINT FETES_PK PRIMARY KEY (LOGIN_USUARI,MT)
);

CREATE OR REPLACE TRIGGER TRG_MT_FETES
    BEFORE INSERT OR UPDATE ON FETES
    FOR EACH ROW
BEGIN
    IF :new.MT > SYSDATE THEN
        RAISE_APPLICATION_ERROR(-20000,'LA DATA NO POT SER FUTURA');
    END IF;
END;
/

CREATE TABLE TIPUS (

    ID       NUMBER(3) GENERATED BY DEFAULT AS IDENTITY
                       CONSTRAINT TIPUS_PK PRIMARY KEY,
    NOM      VARCHAR2(40) CONSTRAINT TIPUS_NN_NOM NOT NULL
                          CONSTRAINT TIPUS_UN_NOM UNIQUE,
    ICONA    BLOB CONSTRAINT TIPUS_NN_ICONA NOT NULL
);

CREATE TABLE PUNT (

    NUM          NUMBER(6) GENERATED BY DEFAULT AS IDENTITY,
    NOM          VARCHAR2(40) CONSTRAINT PUNT_NN_NOM NOT NULL,
    DESC_PUNT    VARCHAR2(200) CONSTRAINT PUNT_NN_DESC NOT NULL,
    FOTO         BLOB,
    LAT          NUMBER(6) CONSTRAINT PUNT_NN_LAT NOT NULL,
    LON          NUMBER(6) CONSTRAINT PUNT_NN_LON NOT NULL,
    ALT          NUMBER(6) CONSTRAINT PUNT_NN_ALT NOT NULL,
    ORDRE        NUMBER(6) CONSTRAINT PUNT_NN_ORDRE NOT NULL,
                           CONSTRAINT PUNT_CK_ORDRE CHECK (ORDRE >=1),
    
    ID_RUTA      NUMBER(6) CONSTRAINT PUNT_NN_ID_RUTA NOT NULL,
    ID_TIPUS     NUMBER(3) CONSTRAINT PUNT_NN_ID_TIPUS NOT NULL,
    
    CONSTRAINT PUNT_FK_ID_RUTA FOREIGN KEY (ID_RUTA) REFERENCES RUTA (ID),
    CONSTRAINT PUNT_FK_ID_TIPUS FOREIGN KEY (ID_TIPUS) REFERENCES TIPUS (ID),
    
    CONSTRAINT PUNT_PK PRIMARY KEY (NUM,ID_RUTA)
);

CREATE INDEX PUNT_NOM ON PUNT (NOM);

CREATE TABLE COMENTARI (

    ID      NUMBER(6) GENERATED BY DEFAULT AS IDENTITY
                      CONSTRAINT COMENTARI_PK PRIMARY KEY,
    TEXT    CLOB CONSTRAINT COMENTARI_NN_TEXT NOT NULL,
    V_INF   NUMBER(1) DEFAULT 5 CONSTRAINT COMENTARI_NN_V_INF NOT NULL
                      CONSTRAINT COMENTARI_CK_V_INF CHECK (V_INF >=1 AND V_INF <=5),
    FETA    NUMBER(1) DEFAULT 0 CONSTRAINT COMENTARI_CK_FETA CHECK (FETA =1 OR FETA =0),
    V_SEG   NUMBER(1) DEFAULT 5 CONSTRAINT COMENTARI_CK_V_SEG CHECK (V_SEG >=1 AND V_SEG <=5),
    V_PAI   NUMBER(1) DEFAULT 5 CONSTRAINT COMENTARI_CK_V_PAI CHECK (V_PAI >=1 AND V_PAI <=5),                      
    DIFIC   NUMBER(1) DEFAULT 5 CONSTRAINT COMENTARI_CK_DIFIC CHECK (DIFIC >=1 AND DIFIC <=5),                     
    MT      DATE DEFAULT SYSDATE,
    
    LOGIN_USUARI VARCHAR2(15) CONSTRAINT COMENTARI_NN_LOGIN_USUARI NOT NULL,
    ID_RUTA NUMBER(6) CONSTRAINT COMENTARI_NN_ID_RUTA NOT NULL,
    
    CONSTRAINT COMENTARI_FK_LOGIN_USUARI FOREIGN KEY (LOGIN_USUARI) REFERENCES USUARI (LOGIN),
    CONSTRAINT COMENTARI_FK_ID_RUTA FOREIGN KEY (ID_RUTA) REFERENCES RUTA (ID)
    
);

CREATE OR REPLACE TRIGGER TRG_COMENTARI_PROPIETARI
    BEFORE INSERT OR UPDATE ON COMENTARI
    FOR EACH ROW
BEGIN
    DECLARE
        login_usu COMENTARI.LOGIN_USUARI%TYPE;
    BEGIN
        BEGIN
            select LOGIN_USUARI into login_usu from RUTA where ID = :new.ID_RUTA;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                login_usu := NULL;
        END;
        IF login_usu = :new.LOGIN_USUARI then
            RAISE_APPLICATION_ERROR(-20001,'EL CREADOR DE LA RUTA NO POT REALITZAR COMENTARIS SOBRE LA MATEIXA'); 
        END IF;
    END;
END;
/

CREATE TABLE COMPANYS (
    
    LOGIN_USUARI VARCHAR2(15),
    ID_COMENTARI NUMBER(6),
    
    CONSTRAINT COMPANYS_FK_LOGIN_USUARI FOREIGN KEY (LOGIN_USUARI) REFERENCES USUARI (LOGIN),
    CONSTRAINT COMPANYS_FK_ID_COMENTARI FOREIGN KEY (ID_COMENTARI) REFERENCES COMENTARI (ID),

    CONSTRAINT COMPANYS_PK PRIMARY KEY (LOGIN_USUARI,ID_COMENTARI)
);

CREATE OR REPLACE TRIGGER TRG_FETA_COMENTARI
    BEFORE INSERT OR UPDATE ON COMENTARI
    FOR EACH ROW
BEGIN
    IF :new.FETA != 1 THEN
            :new.V_SEG := 1;
            :new.V_PAI := 1;
            :new.DIFIC := 1;
            DELETE FROM COMPANYS WHERE ID_COMENTARI = :NEW.ID;
    END IF;
END;
/

CREATE OR REPLACE TRIGGER TRG_COMPANY_RUTA
    BEFORE INSERT OR UPDATE ON COMPANYS
    FOR EACH ROW
BEGIN
    DECLARE
        v_id_ruta RUTA.ID%TYPE;
        v_propietari_comentari COMENTARI.LOGIN_USUARI%TYPE;
        total number(2);
        
        v_data1 FETES.mt%TYPE;
        v_data2 FETES.mt%TYPE;

    BEGIN
        total:=0;
        
        BEGIN
            select ID_RUTA, LOGIN_USUARI into v_id_ruta, v_propietari_comentari from COMENTARI where ID =:NEW.ID_COMENTARI; 
        EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                v_id_ruta := null;
        END;

        BEGIN
            select count(*) into total from FETES where LOGIN_USUARI = :NEW.LOGIN_USUARI and ID_RUTA = v_id_ruta;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                total := NULL;
        END;
        /*
        BEGIN
            select MT into v_data2 from FETES where LOGIN_USUARI = v_propietari_comentari and ID_RUTA = v_id_ruta;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                total := NULL;
        END;
        
        BEGIN
            select MT into v_data1 from FETES where LOGIN_USUARI = :NEW.LOGIN_USUARI and ID_RUTA = v_id_ruta;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                total := NULL;
        END;
        */

        IF total is null or total = 0 then
            RAISE_APPLICATION_ERROR(-20002,'NO ES PODEN AFEGIR COMPANYS SI NO S''HA COMPLETAT LA RUTA');
        ELSIF v_propietari_comentari = :NEW.LOGIN_USUARI then
            RAISE_APPLICATION_ERROR(-20003,'NO ES POT AFEGIR COM A COMPANY EL MATEIX USUARI QUE REALITZA EL COMENTARI');
        /*
        ELSIF v_data1 != v_data2 then
            RAISE_APPLICATION_ERROR(-20004,'EL COMPANY DE RUTA L''HA D''HAVER FET EL MATEIX DIA QUE L''USUARI');
        */
        END IF;
    END;
END;
/

CREATE OR REPLACE TRIGGER TRG_CAMPS_CALCULATS_RUTA
    BEFORE INSERT ON COMENTARI
    FOR EACH ROW
	
BEGIN

    BEGIN
		UPDATE RUTA SET QTAT_USUARIS_COMENTAT = (SELECT COUNT(*)+1 FROM COMENTARI WHERE ID_RUTA = :NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
		UPDATE RUTA SET QTAT_TOTAL_V_INF = (SELECT nvl(SUM(V_INF),0) +:NEW.V_INF FROM COMENTARI WHERE ID_RUTA=:NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
		UPDATE RUTA SET QTAT_FETES_AMB_COMENTARI = (SELECT COUNT(*)+1 FROM COMENTARI WHERE ID_RUTA = :NEW.ID_RUTA AND FETA = 1) WHERE ID=:NEW.ID_RUTA;
		UPDATE RUTA SET QTAT_TOTAL_V_SEG = (SELECT nvl(SUM(V_SEG),0)+:NEW.V_SEG FROM COMENTARI WHERE ID_RUTA=:NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
		UPDATE RUTA SET QTAT_TOTAL_V_PAI = (SELECT nvl(SUM(V_PAI),0)+:NEW.V_PAI FROM COMENTARI WHERE ID_RUTA=:NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
	END;
END;
/

ALTER TABLE TIPUS MODIFY ID GENERATED BY DEFAULT AS IDENTITY START WITH 1;
ALTER TABLE RUTA MODIFY ID GENERATED BY DEFAULT AS IDENTITY START WITH 1;
ALTER TABLE COMENTARI MODIFY ID GENERATED BY DEFAULT AS IDENTITY START WITH 1;

/*
create or replace TRIGGER TRG_CAMPS_QTAT_USUARIS_COMENTAT
    BEFORE INSERT ON COMENTARI
    FOR EACH ROW
BEGIN

    BEGIN
       UPDATE RUTA SET QTAT_USUARIS_COMENTAT = (SELECT COUNT(*)+1 FROM COMENTARI WHERE ID_RUTA = :NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
    END;
END;
/

create or replace TRIGGER TRG_CAMPS_QTAT_TOTAL_V_INF
    BEFORE INSERT ON COMENTARI
    FOR EACH ROW
BEGIN

    BEGIN
		UPDATE RUTA SET QTAT_TOTAL_V_INF = (SELECT nvl(SUM(V_INF),0) +:NEW.v_inf FROM COMENTARI WHERE ID_RUTA=:NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
	END;
END;
/

create or replace TRIGGER TRG_CAMPS_QTAT_FETES_AMB_COMENTARI
    BEFORE INSERT ON COMENTARI
    FOR EACH ROW
BEGIN

    BEGIN
       UPDATE RUTA SET QTAT_FETES_AMB_COMENTARI = (SELECT COUNT(*)+1 FROM COMENTARI WHERE ID_RUTA = :NEW.ID_RUTA AND FETA = 1) WHERE ID=:NEW.ID_RUTA;
    END;
END;
/

create or replace TRIGGER TRG_CAMPS_QTAT_TOTAL_V_SEG
    BEFORE INSERT ON COMENTARI
    FOR EACH ROW
BEGIN

    BEGIN
       UPDATE RUTA SET QTAT_TOTAL_V_SEG = (SELECT nvl(SUM(V_SEG),0)+:NEW.v_seg FROM COMENTARI WHERE ID_RUTA=:NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
    END;
END;
/

create or replace TRIGGER TRG_CAMPS_QTAT_TOTAL_V_PAI
    BEFORE INSERT ON COMENTARI
    FOR EACH ROW
BEGIN

    BEGIN
       UPDATE RUTA SET QTAT_TOTAL_V_PAI = (SELECT nvl(SUM(V_PAI),0)+:NEW.v_pai FROM COMENTARI WHERE ID_RUTA=:NEW.ID_RUTA) WHERE ID=:NEW.ID_RUTA;
    END;
END;
/
*/

